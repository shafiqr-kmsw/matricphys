<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Group Students</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .group { margin-bottom: 20px; }
        .student-list {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            list-style-type: none;
            padding: 0;
            gap: 10px;
        }
        .student-list li { margin: 5px 0; }
        button { margin: 5px; padding: 10px; cursor: pointer; border: none; border-radius: 5px; }
        button.active { background-color: #007BFF; color: white; }
        button:hover { background-color: #0056b3; color: white; }
    </style>
</head>
<body>
    <h1>Group Students</h1>

    <label for="classFilter">Filter by Class:</label>
    <div id="classButtons">
        <button id="allStudentsButton" onclick="filterAllStudents()" class="active">All Students</button>
    </div>

    <label for="numGroups">Number of Groups:</label>
    <input type="number" id="numGroups" min="1" value="2">
    <button onclick="generateGroups()">Generate Groups</button>
    <button onclick="resetGroups()">Reset</button>

    <div id="groups"></div>

    <script>
        // Sample data from the transformed CSV
        const students = [
            { name: "ALBERT SINCLAIR BERMA ANAK SEKERIES BERMA", class: "K3T5A" },
            { name: "ALEXANDRA ANAK ADOWEN", class: "K3T5A" },
            { name: "AMISHA AQIDA BINTI MOHMAD ZAMBRI", class: "K3T5A" },
            { name: "BENNY BROKLYN ANAK TEDI", class: "K3T5A" },
            { name: "CHONG JIA JIAN", class: "K3T5A" },
            { name: "MOHAMAD SYAZRIQAL BIN SUHAILI", class: "K3T6B" },
            { name: "MUHAMMAD MUSZAMIL BIN MUSLIN", class: "K3T6B" },
            { name: "NUR ALISYA QISTINA BINTI JAMALUDDIN", class: "K3T6B" },
            { name: "NUR MYRA SYAHIRAH BINTI MOHAMAD SHARKAWI", class: "K3T6B" },
        ];

        // Extract unique classes
        const classes = [...new Set(students.map(student => student.class))];

        // Populate class filter buttons
        const classButtons = document.getElementById("classButtons");
        classes.forEach(cls => {
            const button = document.createElement("button");
            button.textContent = cls;
            button.onclick = () => filterStudents(cls, button);
            classButtons.appendChild(button);
        });

        let filteredStudents = students;
        let activeButton = document.getElementById("allStudentsButton");

        // Highlight the selected button
        function setActiveButton(button) {
            if (activeButton) {
                activeButton.classList.remove("active");
            }
            activeButton = button;
            activeButton.classList.add("active");
        }

        // Filter students by class
        function filterStudents(cls, button) {
            filteredStudents = students.filter(student => student.class === cls);
            setActiveButton(button);
            alert(`Filtered to class: ${cls}`);
        }

        // Include all students
        function filterAllStudents() {
            filteredStudents = students;
            setActiveButton(document.getElementById("allStudentsButton"));
            alert("All students included");
        }

        // Generate groups
        function generateGroups() {
            const numGroups = parseInt(document.getElementById("numGroups").value, 10);
            const groups = Array.from({ length: numGroups }, () => []);

            // Distribute students into groups
            filteredStudents.forEach((student, index) => {
                groups[index % numGroups].push(student.name);
            });

            // Render groups
            const groupsContainer = document.getElementById("groups");
            groupsContainer.innerHTML = ""; // Clear previous groups

            groups.forEach((group, idx) => {
                const groupDiv = document.createElement("div");
                groupDiv.classList.add("group");

                const groupTitle = document.createElement("h3");
                groupTitle.textContent = `Group ${idx + 1}`;
                groupDiv.appendChild(groupTitle);

                const studentList = document.createElement("ul");
                studentList.classList.add("student-list");
                group.forEach(student => {
                    const listItem = document.createElement("li");
                    listItem.textContent = student;
                    studentList.appendChild(listItem);
                });

                groupDiv.appendChild(studentList);
                groupsContainer.appendChild(groupDiv);
            });
        }

        // Reset groups and filters
        function resetGroups() {
            document.getElementById("numGroups").value = 2;
            filterAllStudents();
            document.getElementById("groups").innerHTML = "";
            alert("Reset successful");
        }
    </script>
</body>
</html>
